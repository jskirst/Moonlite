:javascript
  $(function(){
    $("#results_list li:first").addClass("active");
    $(".evaluation:first").show();
    $("#results_list li").click(function(){
      $(".evaluation").hide();
      $("#"+$(this).data("permalink")).show();
      $("#results_list li").removeClass("active");
      $(this).addClass("active");
    })
  });

:css
  .container.body {width: 980px; }
  .header { margin: 0 0 20px 0; }
  [data-tip]:before { left: 7px; }
  [data-tip]:after { left: -17px; }
  td.table_tip {padding: 12px 8px;}
  .table_tip [data-tip]:before { left: 34px; top: 35px;}
  .table_tip [data-tip]:after { left: 8px; top: 44px; width: 165px; height: 52px; white-space: normal; }
  .ms {display: inline-block; position: relative; bottom: 1px;}
  .ms [data-tip]:after { width: 276px; height: 143px; top: 23px; left:-20px; white-space: normal;}
  .ms [data-tip]:before { left: 3px; }
  
#evaluations_overview.employer-container{ style: "width: 980px; margin-top: 40px;" }
  #grade.employer-box
    .header
      %div
        = image_tag @user.picture, style:"display:inline; height:61px;", alt: "Stoney"
        %div{ style: "display: inline-block; vertical-align: top; margin-left: 5px; "}
          %h2{ style: "font-size: 30px; margin-bottom: -10px; margin-top: -7px; " }= @user.name
          - if @evaluation
            %h3{ style: "font-size:20px; margin-left: 5px;"}
              = link_to @evaluation.title, group_evaluation_path(@group, @evaluation)
        %div{ style: "display: inline-block; vertical-align: top; float: right; text-align: right; margin-top: 10px; "}
          %h3{ style: "font-size:17px; line-height: 25px"}
            = link_to @user.email, "mailto:#{@user.email}"
          - if @user.country
            - country = Carmen::Country.coded(@user.country)
            %h3{ style: "font-size:17px; line-height: 25px"} #{@user.city}, #{country.subregions.coded(@user.state).name}, #{country.name}
      - if @evaluation_enrollment
        .actions
          - if @evaluation_enrollment.submitted_at
            %span.submitted_at Submitted #{time_ago_in_words(@evaluation_enrollment.submitted_at)} ago
          = link_to group_evaluation_url(@group, @evaluation) do
            %div{ "data-tip" => "Back" }
              = image_tag "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/back.png"
          - if @evaluation_enrollment.archived_at
            = link_to save_group_evaluation_url(@group, @evaluation, user_id: @user.id, mode: "unarchive"), method: :put do 
              / Longer Text in this tip will not fit
              %div{ data: { tip: "Un-Archive" } }
                = image_tag "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/archive_selected.png", style: "margin-right: 0"
          - elsif @evaluation_enrollment.favorited_at
            = link_to save_group_evaluation_url(@group, @evaluation, user_id: @user.id, mode: "unfavorite"), method: :put do
              / Longer Text in this tip will not fit
              %div{ data: { tip:  "Un-Favorite" } }
                = image_tag "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/favorite_selected_darker.png", style: "margin-right: 0"
          - else
            = link_to save_group_evaluation_url(@group, @evaluation, user_id: @user.id, mode: "archive"), method: :put do
              %div{ "data-tip" => "Archive" }
                = image_tag "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/archive.png"
            = link_to save_group_evaluation_url(@group, @evaluation, user_id: @user.id, mode: "favorite"), method: :put do
              %div{ "data-tip" => "Favorite" }
                = image_tag "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/favorite.png", style: "margin-right: 0;"
          = link_to export_group_evaluation_path(@group, @evaluation, u: @user) do
            %div{ "data-tip" => "Export" }
              = image_tag "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/export.png"
    .body
      %ul#results_list.nav.nav-tabs
        - @results.each do |r|
          %li{ data: { permalink: r[:permalink], name: r[:name] } }
            %a= truncate(r[:name], length: 15, separator: ' ')
      .evaluations
        - if @results.empty?
          %p This user has submitted this evaluation but has no results listed. It is possible that the evaluation has been changed since this user completed the evaluation, and their results are no longer valid.
        - @results.each do |r|
          - path = r[:path]
          .evaluation.hide{ id: r[:permalink] }
            - unless r[:is_difficult]
              = render "paths/difficulty_warning"
            .header{ style: "padding-left: 0; display: inline-block;"}
              %h3{ style: "border-bottom: 1px solid rgba(0,0,0,.1); line-height: 32px;" } Candidate Summary
            .graph_space{ style: "width: 558px; display: inline-block; float: right;"}
              .ms_graph
                .progress.profileprog
                  - width = ((r[:ms_for_graph] - 300.0)/570.0 + (20.0/570.0)) * 100.0
                  %span.bar{ style: "width: #{width}%;"}
                .ticks
                  - 6.times do
                    .big-hash 
                      |
                    .small-hash 
                      |
                    .small-hash 
                      |
                    .small-hash 
                      |
                .descriptors{ style: "margin-left: -3%;"}
                  %span{ style: "margin-right: 5.3%;"} Unqualified
                  %span{ style: "margin-right: 7%;"} Novice
                  %span{ style: "margin-right: 4.9%;"} Familiar
                  %span{ style: "margin-right: 3.8%;"} Competent
                  %span{ style: "margin-right: 6.4%;"} Advanced
                  %span Expert
            .clear_floats
            .challenge_stats
              .myrank
                %span= r[:ms_for_graph]
                .skill-tag.label{ class: r[:skill_level].downcase}
                  = r[:skill_level]
                .text
                  MetaScore Ranking
                  .ms{ style: "display: inline-block;" }                    
                    .tip-below{ style: "display: inline-block;", data: {tip: "MetaScores range from 850 to 300. This is the ability level MetaBright estimates this person to possess for this skill. Our algorithm analyzes many variables to reach this conclusion such as question difficulty, content topic, and responder speed. Question difficulty is dynamically calculated, so it's possible for your candidates' MetaScores to slightly shift as question difficulties evolve."}}
                      %img{src: "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/tooltip_light.png", style: "width: 16px; height: 16px; display: inline-block; margin-bottom: 3px;"}
              %table.table.overview
                %tbody
                  %tr
                    %td.table_tip
                      - if r[:core].empty?
                        %h3 --
                        %p.tip-below{ data: {tip: "There aren't any multiple choice questions in this Challenge."}} Correct MC
                      - else
                        %h3 #{r[:performance].percent_correct}%
                        %p.tip-below{ data: {tip: "Percent of multiple choice questions answered correctly."}} Correct MC
                    %td.table_tip
                      - if r[:core].empty?
                        %h3 --
                        %p.tip-below{ data: {tip: "There aren't any multiple choice questions in this Challenge."}} Avg. Time per MC
                      - else
                        %h3 #{r[:performance].avg_time_to_answer.round(1)}s
                        %p.tip-below{ data: {tip: "Average response time per correct multiple choice question."}} Avg. Time per MC
                    %td.table_tip
                      - if r[:creative].count == 0
                        %h3 --
                        %p.tip-below{ data: {tip: "There are no Creative Response questions in this Challenge."}} Creative Response 
                      - else
                        %h3= r[:creative].count {|x| not x.content.blank? }.to_s+"/"+r[:creative].count.to_s
                        %p.tip-below{ data: {tip: "Number of submitted Creative Response questions out of total available."}} Creative Response
              - unless path.group_id?
                .strengths_weaknesses
                  .strengths 
                    .header{ style:"font-size: 16px; border-bottom: 1px solid rgba(0,0,0,.1);"}
                      Strengths
                    .body
                      - if r[:performance].strengths.empty?
                        %p{ style: "font-size: 12px;" } More data required.
                      - else
                        %ul
                          - r[:performance].strengths.first(3).each do |topic_name, stats|
                            %li= topic_name
                  .weaknesses 
                    .header{ style:"font-size: 16px; border-bottom: 1px solid rgba(0,0,0,.1);"}
                      Weaknesses
                    .body
                      - if r[:performance].weaknesses.empty?
                        %p{ style: "font-size: 12px;" } More data required.
                      - else
                        %ul
                          - r[:performance].weaknesses.first(3).each do |topic_name, stats|
                            %li= topic_name
                
            - if r[:creative].any?
              %div
                %a.header_link{ "data-target" => "#cr", "data-toggle" => "collapse", :type => "button"}  Creative Response
                #cr.collapse.in{ style: "margin-bottom: 20px;"}
                  %ol
                    - r[:creative].each do |completed_task|
                      %li
                        - total_time = (completed_task.updated_at - completed_task.created_at).round(0)
                        - total_time = creative_time_to_answer if total_time > 7200
                        - minutes = (total_time.to_f / 60).round(0)
                        - seconds = (total_time.to_f % 60).round(0)
                        .answer
                          - task = completed_task.task
                          %p= task.question
                          - if completed_task.submitted_answer.try(:content).blank?
                            .skipped_cr
                              %img{ src: "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/warning.png"}
                              %p{ style: "display: inline-block; "} Candidate skipped this question. 
                          - else
                            %pre= completed_task.submitted_answer.try(:content).to_s
                            .time_taken_container
                              .time_taken 
                                Completed in 
                                - if minutes != 0 
                                  #{minutes} minutes 
                                - if seconds != 0
                                  #{seconds} seconds
            - if r[:core].any?
              %div
                %a.header_link Multiple Choice
                %div
                  %ol
                    - r[:core].each do |completed_task|
                      %li{ data: {  id: completed_task.id, created: completed_task.created_at, updated: completed_task.updated_at } }
                        .answer
                          - task = completed_task.task
                          %p= task.question
                          - if task.quoted_text
                            %pre= task.quoted_text
                          = difficulty_label(task)
                          - if completed_task.correct?
                            .time_taken{ style: "float: right;"} Correct, #{completed_task.points_awarded} points
                          - else
                            .time_taken.incorrect{ style: "float: right;"}  Incorrect
                          %div{ style: "margin-top: 10px;"} 
                            Correct answer:
                            %pre= task.correct_answer.content # Correct answer
                          - if not completed_task.correct?
                            %div
                              - if completed_task.answer.blank?
                                User skipped this question
                              - else
                                User response:
                                %pre= completed_task.answer # User supplied answer
                          
        
                
                
        
