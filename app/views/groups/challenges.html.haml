:javascript
  function compare_and_search(){
    var new_value = $("#challenge_search").val();
    if(new_value != original_value){
      original_value = new_value;
      $.ajax('#{group_paths_url(@group)}',
        { 
          type: "GET", 
          data: { q: new_value }, 
          success: function(data, responseText){ 
            $(".custom_challenges").html(data);
          } 
        }
      );
    }
  }
  
  $(function(){
    original_value = $("#challenge_search").val();
    setInterval("compare_and_search();", 300);
  });

.employer-container
  .employer-box
    .header
      = image_tag STONEY_SMALL_URL, class: "stoney", alt: "Stoney"
      %h2 #{@group.name}'s Challenges
      - unless @paths.empty?
        %input{ type: "text", placeholder: "Search Challenges...", id: "challenge_search" }
    .body
      .custom_challenges
        - if @paths.empty?
          .first_timer
            = image_tag "https://s3.amazonaws.com/moonlite-nsdub/static/nav+bar+icons/challenges_dark.png"
            %h3 Custom Challenges
            %p Challenges contain the content that your candidates are tested on. Multiple Challenges can be included in a single Evaluation.
            = link_to "Create a custom Challenge", new_group_path_url, class: "submit_button"
        - else
          = render "table"
    .header{ style: "border-top: 1px solid rgba(0,0,0,0.1); margin-top: 30px; padding-top: 10px"}
      %h3 MetaBright Challenges
    .body
      .mb_challenges
        - @personas.each do |persona|
        - prof_paths = persona.paths.where.not(professional_at: nil).sort_by{|path| [path.name.upcase]}
          - unless prof_paths.count == 0
            %h4= persona.name
            %ul
              - prof_paths.each do |path|
                %li
                  = image_tag path.picture
                  %span= path.name
        
      
