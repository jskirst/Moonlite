%div.post
  - unless feed.context == :profile
    %div.postphotospace
      = link_to profile_path(post["username"]) do
        = image_tag User.picture(post["user_image_url"]), class: "photo"
  %div.postspace
    %div.postheader
      %h3
        = link_to truncate(post["name"], length: 50), profile_path(post["username"]), class:"username"
        - if false #user.groups.size > 0
          - user.groups.each do |group|
            = link_to group_path(group.permalink) do
              = image_tag group.picture, class: "mini_group_icon img-circle", title: "Member of #{group.name}", alt: "Member of #{group.name}"
        - if badge = User.reputation_badge(post["earned_points"])
          = image_tag (badge[0]), class: "rep_badge_post", title: badge[1], alt: badge[1]
      %span
        = link_to truncate(post["path_name"], length: 40), challenge_path(post["path_permalink"]), class:"challengename"
      %div.votingandpointsarea
        - if false
          %img.circle_check{src: "https://s3.amazonaws.com/moonlite-nsdub/static/random+icons/circle-check.png", title: "Verified correct answer", alt: "Verified correct output"}
        - if current_user
          %span.vote_points= post["points_awarded"]
          %span.vote_points{ style:"margin-right:1px;"} pts
          - if current_user.id == post["user_id"]
            %div.dropdown.submission-icon{ style: "padding-top:0px; margin: 0px;" }
              %a.dropdown-toggle{ "data-toggle" => "dropdown", style: "padding:0px 4px;" }
                %span.caret{ style: "margin: 6px 0 0 0;" }
              %ul.dropdown-menu{ role: "button", style: "margin: 0; padding: 0; top:26px; left: -71px; min-width: 140px;" }
                %li{ style: "margin-left: -10px;" }
                  %div.graynub{ style: "top:-37px; left: 78px; margin:0; "}
                  %div{ style: "padding: 3px 0px; margin:0;"}
                    %ul.profile_dropdown{ style: "list-style: none; margin: 0px; padding: 0; min-width: 120px;"}
                      %li{ style: "margin-left:-8px; "}= link_to "Edit Submission", take_section_path(post["section_id"], task_id: post["task_id"]), style: "padding:0; padding-left:8px;"
                      %li{style: "text-align:center;"}= link_to "Delete Submission", retract_submission_path(post["id"]), remote: true, confirm: "Are you sure you want to delete your submission?", class: "retract_link", style: "padding:0;"
          - else
            = link_to vote_task_path(post["task_id"], sa_id: post["submitted_answer_id"]), remote: true, class: ("btn vote_button " + (feed.votes.include?(post["submitted_answer_id"]) ? "btn-info" : "")) do
              %img.up_vote{ src: ICON_UPVOTE_URL, alt: "Up-vote" }
        - else
          %span.vote_points= post["points_awarded"]
          %span.vote_points{ style:"margin-right:5px;" } pts
    - if current_user
      %div.posttext.leveltext.dropdown{ style: "#{'background-color: rgb(195, 225, 247)' if post["answer_type"] == Task::CHECKIN}" }
        %code.dropdown-toggle{ "data-toggle" => "dropdown", role: "button"} #{post["question"]}
        %ul.dropdown-menu{ role: "menu", style: "left:99.5%; top:-70%; min-width:152px;"}
          %li
            %div
              %div.sidenub
            %div{ style: "padding: 3px 0px;"}
              %ul.profile_dropdown{ style: "list-style: none; margin: 0 2px 0 4px;"}
                %li.CR_dropdown_option{ style: ("display:none;" if current_user.id == post["user_id"])} 
                  = link_to "Answer this question", take_section_path(post["section_id"], task_id: post["task_id"])
                %li.CR_dropdown_option
                  = link_to "View all responses", task_drilldown_path(post["task_id"])
                %li.CR_dropdown_option
                  = link_to "View all details", submission_drilldown_path(post["submitted_answer_id"])
                - if @enable_administration
                  %li.CR_dropdown_option
                    - if post["promoted_at"].nil?
                      = link_to "Add to Hall of Fame", admin_update_submission_path(post["submitted_answer_id"], mark: "promoted"), method: :put
                    - else
                      = link_to "In the Hall of Fame", "#"
    
    %div#cr_pop.CRarea
      - if post["answer_type"] == Task::CREATIVE.to_s
        - if post["answer_sub_type"] == Task::TEXT.to_s
          - if post["submitted_answer_content"] && post["submitted_answer_content"].downcase.include?("<html>")
            .preview
              %div.sliderbar1
                %span.reload{ style: "color: #404040; cursor: pointer;", onclick: "$(this).parents('.CRarea').find('iframe').attr('src', $(this).parents('.CRarea').find('iframe').attr('src'));" } Reload
                |
                %span.view_raw{ style: "color: #404040; padding-right: 5px;cursor: pointer;", onclick: "$(this).parents('.CRarea').find('.preview').hide(); $(this).parents('.CRarea').find('.raw').show();" } View Raw
              %iframe{ src: raw_path(post["submitted_answer_id"]), style: "min-height: 150px; width: 100%; border: 0; z-index: 1;" }
            .raw.hide
              %div.sliderbar2
                %span.view_preview{ style: "color: #404040; padding-right: 5px; cursor: pointer;", onclick: "$(this).parents('.CRarea').find('.raw').hide(); $(this).parents('.CRarea').find('.preview').show();"} View Preview
              %code.content{ style: "word-break:normal;" }= post["submitted_answer_content"]
          - else
            %code.content{ style: "word-break:normal;" }= post["submitted_answer_content"]

        - elsif post["answer_sub_type"] == Task::IMAGE.to_s
          = image_tag(sanitize(post["image_url"]))
      
        - elsif post["answer_sub_type"] == Task::YOUTUBE.to_s
          %center
            %div.youtube_answer{ id: "youtube_answer_#{post["id"]}", alt: post["url"] }
        
        - else raise "Unknown answer subtype"
      
      - elsif post["answer_type"] == Task::CHECKIN.to_s
        %div.task_post
          %div.content
            %code.content= post["submitted_answer_content"]
          - if post["image_url"].blank?
            = image_tag ICON_CHECK_URL, alt: "Image placeholder", class: "preview_image", style:"height:auto; width:70px; margin-top:10px; z-index: 500;"
          - else
            = image_tag post["image_url"], alt: "Image content", class: "preview_image", style:"height:auto; z-index: 500; #{'opacity:0.5' unless post["submitted_answer_content"].blank?}"
          %div.details
            %h4.title
              - if post["title"].blank?
                #{post["name"]} marked this task complete on #{post["created_at"].strftime('%B %d, %Y')}.
              - else
                = truncate(post["title"], length: 75)
            - unless post["description"].blank?
              %h5.description{ style: "margin-bottom:2px; "}= truncate(post["description"], length: 85)
            - unless post["url"].blank?
              %h5{ style: "margin-top:0" }= link_to truncate(post["url"], length:85), post["url"]
              
      - else raise "Unknown answer type"    
    
    - unless post["submitted_answer_caption"].blank?
      %div.post_caption= post["submitted_answer_caption"]
    = render "comments/comments", social_details(post)
    
