= form_for(task, remote: true, html: { "data-type" => "html", class: "form-horizontal question_creator"}) do |f|
  = f.hidden_field :section_id
  %div.floatr
    = f.submit "Save", id: "save_question_button", class: "button button-info button-small"
    - if task.new_record?
      %span#close_question_button.button.button-standard.button-small{ onclick: "clear_form();" } Clear
    - else
      %span.button.button-standard.button-small{ onclick: "$(this).parents('td').find('div.question_display').show(); $(this).parents('.question_creator').remove();" } Close
  %div.task_form{ style: "margin-top:10px;" }
    %div.message_container.alert.alert-message{ style: "display: none; width:350px; margin-left: 70px; margin-top:10px;" }
    %h4#form_title= (task.new_record? ? "Add" : "Update") + " Question"
    %p.errors
    %div.control-group
      %label.control-label Question
      %div.controls
        = f.text_area :question, class: "input-xlarge question_input", placeholder: "Type your question here...", style: "width: 450px; height: 100px;"
    %div.row
      %div.answers{ style: "margin-left: 20px;" }
        
        - if task.new_record?
          .control-group
            %label.control-label Answer type
            .controls.image_upload
              = f.select :answer_type, hash_to_array(Task::TYPES), style: "display: inline-block; "
              = render "stored_resources/new_image"
        
          .control-group.hide.sub_type
            %label.control-label Response type
            .controls
              = f.select :answer_sub_type, hash_to_array(Task::SUBTYPES)
        
        - if task.new_record? or task.multiple_choice? or task.exact?
          .multiple_choice.control-group
            %label.control-label Quoted Text (optional)
            .controls{ style: "margin-top: 6px;" }
              - unless task.quoted_text
                %a.show_quoted_text{ onclick: "$(this).hide(); $(this).siblings('#task_quoted_text').show();" } Add quoted text
              = text_area_tag "task[quoted_text]", task.quoted_text, class: "big_text_area", style: task.quoted_text.blank? ? "display: none;" : ""
        
        - if task.creative? or task.new_record?
          .creative.template_toggle
            .control-group
              %label.control-label Template (optional)
              .controls{ style: "margin-top: 6px;" }
                %a.show_template{ onclick: "$(this).hide(); $(this).siblings('#task_template').show();", style: (task.template.blank? ? "" :  "display: none;") } Add template for question
                = text_area_tag "task[template]", task.template, class: "big_text_area", style: (task.template.blank? ? "display: none;" : "")
        
        - if task.new_record? or task.creative? or task.exact?
          .creative.exact.hide
            .control-group
              %label.control-label Exact answer (case insensitive)
              .controls
                = text_field_tag("task[exact1]", nil, { maxlength: 255, size: 75 })
        
        - unless answers.empty?
          .multiple_choice
            - answers.each_with_index do |a, i|
              %div.control-group
                %label.control-label= a.is_correct ? "Correct answer" : "Wrong answer"
                %div.controls
                  = f.text_field "answer_#{a.id || "new_" + (i + 1).to_s}", value: a.content, maxlength: 255, size: 75, class: (a.is_correct ? "correct_answer" : "wrong_answer")        
        
        - unless task.new_record?
          .control-group
            .controls
              - if sr = task.stored_resources.first
                = image_tag sr.obj.url, style: "height: 100px;"
                = link_to "Remove", delete_stored_resource_path(sr.id), method: :delete, confirm: "Are you sure you want to remove this attachment?"
              - else
                = link_to "Add Image", add_stored_resource_task_path(task)
          
          .control-group
            %label.control-label Section
            .controls
              = f.select :section_id, @sections.collect { |s| [s.name, s.id] }
                
        %h4 Source        
        .control-group
          %label.control-label URL
          .controls
            = f.text_field :resource                
        .control-group 
          %label.control-label Title
          .controls
            = f.text_field :resource_title
        
        - if @enable_administration
          %h4 Admin        
          .control-group
            %label.control-label Position
            .controls
              = f.text_field :position                
          - unless @topics.empty?
            .control-group
              %label.control-label Topic
              .controls
                = f.select :topic_id, @topics.collect{ |t| [t.id, t.name] }
          .control-group
            %label.control-label Topic
            .controls
              = f.text_field :topic_name
        
        .creative.hide
          %p.free_text_note.answer_note.hide To answer this question, the user will be asked to type an appropriate free text response into a text box.
          %p.image_link_note.answer_note.hide To answer this question, the user will be asked to copy and paste a link to an image from the internet.
          %p.youtube_link_note.answer_note.hide To answer this question, the user will be asked to copy and paste a link to a video from Youtube.
        
        .checkin.hide
          .control-group
            %label.control-label
              = image_tag LIGHT_BULB_URL, style: "width: 16px; height: 16px;"
            .controls{ style: "width: 450px;" }
              %p All tasks require proof of completion in the form of a webpage. If proof of completion for the task you want to create cannot be easily obtained from a website url, consider rephrasing or changing it.

:javascript
  function display_sub_type_message(){
    var sub_type = $("#task_answer_sub_type").val();
    $(".answer_note").hide();
    if(sub_type=="100"){
      $(".free_text_note").show();
    } else if(sub_type=="101"){
      $(".image_link_note").show();
    } else {
      $(".youtube_link_note").show();
    }
  }
  
  $("#task_answer_sub_type").change(function(){
    display_sub_type_message();
  });

  $("select[name='task[answer_type]']").change(function(){
    $(".creative").hide();
    $(".multiple_choice").hide();
    $(".checkin").hide();
    $(".exact").hide();
    $(".template").hide();
    $(this).parents("div.control-group").siblings(".sub_type").hide();
    var type = $(this).val();
    if(type == 0){
      $(".creative").show();
      display_sub_type_message();
    } else if(type == 1) {
      $(".exact").show();
    } else if(type == 2) {
      $(".multiple_choice").show();
    } else if(type == 3) {
      $(".checkin").show();
    }
  });
  
  $(".question_creator").on("ajax:success", function(xhr, data){
    console.log(data);
    if(data.errors){
      $(this).find("p.errors").text(data.errors)
    }
  })